---
import Pagination from "../components/Pagination.astro"
import Share from "../components/Share.astro"
import { getFullPath } from "../helpers/path"
import type { Breadcrumb } from "../types/Breadcrumb"
import type { Lesson, LessonFrontmatter } from "../types/Course"
import Content from "./Content.astro"
import { SignedIn, SignedOut } from "astro-clerk-auth/components/control"
import {SignIn} from "astro-clerk-auth/components/interactive"
import { YouTube } from "astro-embed"

type Props = LessonFrontmatter &
	Pick<Lesson, "slug"> & {
		previousLesson: Lesson | null
		nextLesson: Lesson | null
	}

const { title, description, cover, video, slug, nextLesson, previousLesson } =
	Astro.props

const lessonNo = slug.match(/\d+(?:\-\d+)?/) as unknown as string

const breadcrumbs: Breadcrumb[] = [
	{
		path: "/",
		label: "Home",
	},
	{
		path: "/course",
		label: "Course",
	},
	{
		path: null,
		label: lessonNo,
	},
]

let previousContent = undefined

if (previousLesson)
	previousContent = {
		path: getFullPath("course", previousLesson?.slug),
		label: previousLesson?.data.title,
	}

let nextContent = undefined

if (nextLesson)
	nextContent = {
		path: getFullPath("course", nextLesson?.slug),
		label: nextLesson?.data.title,
	}
---

<Content
	title={title}
	description={description}
	cover={cover}
	breadcrumbs={breadcrumbs}
>
	<div slot="content">
		<SignedIn>
			{
				video && (
					<div class="video">
						<YouTube id={video} poster={cover} />
					</div>
				)
			}
			<slot />
			<br /><br />
			<Share category="lesson" text={title} />
			<hr />
			<br /><br />

			<Pagination nextContent={nextContent} previousContent={previousContent} />
		</SignedIn>
		<SignedOut>
			<div class="signin">
				<SignIn
       
					routing="hash"
					signUpFallbackRedirectUrl={`/course/${slug}`}
          fallbackRedirectUrl={`/course/${slug}`}
				/>
			</div>
		</SignedOut> 
	</div>
</Content>

<style lang="scss">
	.video {
		aspect-ratio: 1920 / 1080;
		width: 100%;
		position: relative;
		top: -70px;
		border: 4px solid var(--white-100);

		& > * {
			width: 100%;
			max-width: 100%;
		}
	}

	.signin {
		display: flex;
		justify-content: center;
	}
</style>
